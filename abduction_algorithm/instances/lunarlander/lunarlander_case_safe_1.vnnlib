; lunarlander property safe_1

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.86896620000000002193))
(assert (<= X_0 -0.86896620000000002193))

; Input 1
(assert (>= X_1  0.04183932400000000412))
(assert (<= X_1  0.04183932400000000412))

; Input 2
(assert (>= X_2  1.55424809999999991028))
(assert (<= X_2  1.55424809999999991028))

; Input 3
(assert (>= X_3 -0.44905534000000002504))
(assert (<= X_3 -0.44905534000000002504))

; Input 4
(assert (>= X_4 -0.40887499999999998845))
(assert (<= X_4 -0.40887499999999998845))

; Input 5
(assert (>= X_5 -0.00000000732687779892))
(assert (<= X_5 -0.00000000732687779892))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.67771006  2.64904737 -2.15399265 -1.29549968]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
