; lunarlander property safe_57

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72940563999999996625))
(assert (<= X_0 -0.72940563999999996625))

; Input 1
(assert (>= X_1  0.04817949200000000431))
(assert (<= X_1  0.04817949200000000431))

; Input 2
(assert (>= X_2  0.03028871699999999972))
(assert (<= X_2  0.03028871699999999972))

; Input 3
(assert (>= X_3 -0.04778698499999999016))
(assert (<= X_3 -0.04778698499999999016))

; Input 4
(assert (>= X_4 -0.10221182600000000562))
(assert (<= X_4 -0.10221182600000000562))

; Input 5
(assert (>= X_5 -0.07373618999999999313))
(assert (<= X_5 -0.07373618999999999313))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.25104585 -0.39385265 -3.00349021 -1.08797085]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
