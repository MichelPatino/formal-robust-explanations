; lunarlander property safe_88

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.68475675999999996435))
(assert (<= X_0 -0.68475675999999996435))

; Input 1
(assert (>= X_1  0.07494628999999999874))
(assert (<= X_1  0.07494628999999999874))

; Input 2
(assert (>= X_2  0.02600756699999999880))
(assert (<= X_2  0.02600756699999999880))

; Input 3
(assert (>= X_3 -0.03126987400000000306))
(assert (<= X_3 -0.03126987400000000306))

; Input 4
(assert (>= X_4  0.08573237999999999692))
(assert (<= X_4  0.08573237999999999692))

; Input 5
(assert (>= X_5 -0.05823922000000000126))
(assert (<= X_5 -0.05823922000000000126))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.89602113 -2.14647436 -3.54755878 -2.45582843]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
