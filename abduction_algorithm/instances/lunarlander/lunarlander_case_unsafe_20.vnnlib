; lunarlander property unsafe_20

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.89354630000000001555))
(assert (<= X_0 -0.89354630000000001555))

; Input 1
(assert (>= X_1  0.05781921000000000282))
(assert (<= X_1  0.05781921000000000282))

; Input 2
(assert (>= X_2  1.04836290000000009748))
(assert (<= X_2  1.04836290000000009748))

; Input 3
(assert (>= X_3 -0.29822955000000000991))
(assert (<= X_3 -0.29822955000000000991))

; Input 4
(assert (>= X_4 -0.40887803000000000342))
(assert (<= X_4 -0.40887803000000000342))

; Input 5
(assert (>= X_5 -0.02265828099999999540))
(assert (<= X_5 -0.02265828099999999540))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.32781145  0.933734   -1.77463472 -1.66645813]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
