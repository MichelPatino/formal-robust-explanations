; lunarlander property safe_26

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72945945999999994847))
(assert (<= X_0 -0.72945945999999994847))

; Input 1
(assert (>= X_1  0.04799352600000000163))
(assert (<= X_1  0.04799352600000000163))

; Input 2
(assert (>= X_2  4.11877668805647534356))
(assert (<= X_2  4.11877668805647534356))

; Input 3
(assert (>= X_3 -0.04742457700000000248))
(assert (<= X_3 -0.04742457700000000248))

; Input 4
(assert (>= X_4 -0.00973315900000000164))
(assert (<= X_4 -0.00973315900000000164))

; Input 5
(assert (>= X_5 -0.07155786999999999565))
(assert (<= X_5 -0.07155786999999999565))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.20320567  3.45093727 -8.53829002 -3.51764989]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
