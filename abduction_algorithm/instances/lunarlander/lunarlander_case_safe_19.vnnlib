; lunarlander property safe_19

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.37586403000000001562))
(assert (<= X_0 -0.37586403000000001562))

; Input 1
(assert (>= X_1  0.08535468999999999695))
(assert (<= X_1  0.08535468999999999695))

; Input 2
(assert (>= X_2 -0.08749537999999999760))
(assert (<= X_2 -0.08749537999999999760))

; Input 3
(assert (>= X_3 -0.00669874699999999795))
(assert (<= X_3 -0.00669874699999999795))

; Input 4
(assert (>= X_4  0.01261930700000000148))
(assert (<= X_4  0.01261930700000000148))

; Input 5
(assert (>= X_5  0.05797951700000000125))
(assert (<= X_5  0.05797951700000000125))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.94796222 -1.62737894 -1.525195   -0.79219502]
; action chosen was 3 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_3))
(and (>= Y_1 Y_3))
(and (>= Y_2 Y_3))
))
