; lunarlander property safe_83

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.73064919999999999867))
(assert (<= X_0 -0.73064919999999999867))

; Input 1
(assert (>= X_1  0.05167781000000000458))
(assert (<= X_1  0.05167781000000000458))

; Input 2
(assert (>= X_2 -0.00986392999999999992))
(assert (<= X_2 -0.00986392999999999992))

; Input 3
(assert (>= X_3  0.02721213399999999893))
(assert (<= X_3  0.02721213399999999893))

; Input 4
(assert (>= X_4  0.04635209999999999331))
(assert (<= X_4  0.04635209999999999331))

; Input 5
(assert (>= X_5  0.00573092699999999851))
(assert (<= X_5  0.00573092699999999851))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.7874133  -1.04385686 -4.03270817 -1.48590255]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
