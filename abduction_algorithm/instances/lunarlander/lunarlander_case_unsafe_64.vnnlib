; lunarlander property unsafe_64

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.55951580000000000759))
(assert (<= X_0 -0.55951580000000000759))

; Input 1
(assert (>= X_1  0.12165542999999998108))
(assert (<= X_1  0.12165542999999998108))

; Input 2
(assert (>= X_2 -0.02068843299999999913))
(assert (<= X_2 -0.02068843299999999913))

; Input 3
(assert (>= X_3  0.05720168999999999948))
(assert (<= X_3  0.05720168999999999948))

; Input 4
(assert (>= X_4  0.09935156000000000542))
(assert (<= X_4  0.09935156000000000542))

; Input 5
(assert (>= X_5  0.01487384549999999812))
(assert (<= X_5  0.01487384549999999812))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.71336818 -2.05081177 -3.93760753 -2.26171136]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
