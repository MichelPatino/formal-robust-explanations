; lunarlander property unsafe_85

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.67585709999999998843))
(assert (<= X_0 -0.67585709999999998843))

; Input 1
(assert (>= X_1  0.05276700000000000140))
(assert (<= X_1  0.05276700000000000140))

; Input 2
(assert (>= X_2  0.03250420999999999866))
(assert (<= X_2  0.03250420999999999866))

; Input 3
(assert (>= X_3 -0.04435843200000000319))
(assert (<= X_3 -0.04435843200000000319))

; Input 4
(assert (>= X_4  0.08383469999999999811))
(assert (<= X_4  0.08383469999999999811))

; Input 5
(assert (>= X_5 -0.00574003100000000134))
(assert (<= X_5 -0.00574003100000000134))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.86611629 -1.10942852 -3.74686503 -1.53367567]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
