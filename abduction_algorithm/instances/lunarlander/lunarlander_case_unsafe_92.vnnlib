; lunarlander property unsafe_92

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.81853080000000000283))
(assert (<= X_0 -0.81853080000000000283))

; Input 1
(assert (>= X_1  0.11631168000000000062))
(assert (<= X_1  0.11631168000000000062))

; Input 2
(assert (>= X_2 -0.03535052400000000122))
(assert (<= X_2 -0.03535052400000000122))

; Input 3
(assert (>= X_3  0.01632650000000000073))
(assert (<= X_3  0.01632650000000000073))

; Input 4
(assert (>= X_4  0.04066524299999999675))
(assert (<= X_4  0.04066524299999999675))

; Input 5
(assert (>= X_5  0.05609254000000000323))
(assert (<= X_5  0.05609254000000000323))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-2.42297769 -2.75004244 -4.57992172 -2.92221093]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
