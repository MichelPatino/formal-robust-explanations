; lunarlander property safe_14

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0  0.00344953536987304896))
(assert (<= X_0  0.00344953536987304896))

; Input 1
(assert (>= X_1  0.20000000000000001110))
(assert (<= X_1  0.20000000000000001110))

; Input 2
(assert (>= X_2  0.34938514232635498047))
(assert (<= X_2  0.34938514232635498047))

; Input 3
(assert (>= X_3  0.03414210081100464700))
(assert (<= X_3  0.03414210081100464700))

; Input 4
(assert (>= X_4 -0.00399036146700382233))
(assert (<= X_4 -0.00399036146700382233))

; Input 5
(assert (>= X_5 -0.07914091944694519321))
(assert (<= X_5 -0.07914091944694519321))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.48149768  0.16450024 -0.68137419 -1.39060783]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
