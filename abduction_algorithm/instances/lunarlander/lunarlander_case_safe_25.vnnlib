; lunarlander property safe_25

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.87714329999999995913))
(assert (<= X_0 -0.87714329999999995913))

; Input 1
(assert (>= X_1  0.04715510500000000271))
(assert (<= X_1  0.04715510500000000271))

; Input 2
(assert (>= X_2  0.40867954000000000780))
(assert (<= X_2  0.40867954000000000780))

; Input 3
(assert (>= X_3 -0.11807621000000000089))
(assert (<= X_3 -0.11807621000000000089))

; Input 4
(assert (>= X_4 -0.40887508000000000186))
(assert (<= X_4 -0.40887508000000000186))

; Input 5
(assert (>= X_5  0.00000000153025080107))
(assert (<= X_5  0.00000000153025080107))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.06349329  0.58259362 -2.5044744  -1.19395709]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
