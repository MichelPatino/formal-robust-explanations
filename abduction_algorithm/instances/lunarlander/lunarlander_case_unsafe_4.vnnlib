; lunarlander property unsafe_4

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88101059999999997707))
(assert (<= X_0 -0.88101059999999997707))

; Input 1
(assert (>= X_1  0.04966908300000000276))
(assert (<= X_1  0.04966908300000000276))

; Input 2
(assert (>= X_2  1.17354639999999998956))
(assert (<= X_2  1.17354639999999998956))

; Input 3
(assert (>= X_3 -0.33906254000000002335))
(assert (<= X_3 -0.33906254000000002335))

; Input 4
(assert (>= X_4 -0.40887501999999997793))
(assert (<= X_4 -0.40887501999999997793))

; Input 5
(assert (>= X_5  0.00000000121292839661))
(assert (<= X_5  0.00000000121292839661))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.48450461  2.10837293 -1.96852767 -1.20003664]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
