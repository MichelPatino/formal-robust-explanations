; lunarlander property safe_52

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72421217000000004393))
(assert (<= X_0 -0.72421217000000004393))

; Input 1
(assert (>= X_1  0.03620790000000000119))
(assert (<= X_1  0.03620790000000000119))

; Input 2
(assert (>= X_2 -0.04957675000000000276))
(assert (<= X_2 -0.04957675000000000276))

; Input 3
(assert (>= X_3  0.06287231999999999543))
(assert (<= X_3  0.06287231999999999543))

; Input 4
(assert (>= X_4  0.10447127999999999970))
(assert (<= X_4  0.10447127999999999970))

; Input 5
(assert (>= X_5  0.05816998999999999087))
(assert (<= X_5  0.05816998999999999087))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.31037664 -1.62684309 -4.8232007  -1.94634473]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
