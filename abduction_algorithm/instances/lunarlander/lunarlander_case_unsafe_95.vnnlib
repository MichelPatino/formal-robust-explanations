; lunarlander property unsafe_95

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.75081973999999995772))
(assert (<= X_0 -0.75081973999999995772))

; Input 1
(assert (>= X_1  0.07192347999999999797))
(assert (<= X_1  0.07192347999999999797))

; Input 2
(assert (>= X_2  0.02067315200000000019))
(assert (<= X_2  0.02067315200000000019))

; Input 3
(assert (>= X_3 -0.02767733700000000324))
(assert (<= X_3 -0.02767733700000000324))

; Input 4
(assert (>= X_4 -0.11543696400000000302))
(assert (<= X_4 -0.11543696400000000302))

; Input 5
(assert (>= X_5 -0.05591054000000000163))
(assert (<= X_5 -0.05591054000000000163))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.71018565 -1.89206958 -3.21160793 -2.36956859]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
