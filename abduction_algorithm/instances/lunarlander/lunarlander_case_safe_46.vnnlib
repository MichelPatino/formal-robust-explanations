; lunarlander property safe_46

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72165990000000002080))
(assert (<= X_0 -0.72165990000000002080))

; Input 1
(assert (>= X_1  0.02903431500000000151))
(assert (<= X_1  0.02903431500000000151))

; Input 2
(assert (>= X_2  0.03152510000000000034))
(assert (<= X_2  0.03152510000000000034))

; Input 3
(assert (>= X_3 -0.05992804999999999660))
(assert (<= X_3 -0.05992804999999999660))

; Input 4
(assert (>= X_4 -0.01041679900000000089))
(assert (<= X_4 -0.01041679900000000089))

; Input 5
(assert (>= X_5 -0.03121346599999999874))
(assert (<= X_5 -0.03121346599999999874))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.59995121 -0.79254943 -3.3922708  -1.33512211]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
