; lunarlander property safe_18

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0  0.00676927566528320868))
(assert (<= X_0  0.00676927566528320868))

; Input 1
(assert (>= X_1  0.20000000000000001110))
(assert (<= X_1  0.20000000000000001110))

; Input 2
(assert (>= X_2  0.68563122749328608840))
(assert (<= X_2  0.68563122749328608840))

; Input 3
(assert (>= X_3  0.15014828046162922992))
(assert (<= X_3  0.15014828046162922992))

; Input 4
(assert (>= X_4 -0.00783703476190567017))
(assert (<= X_4 -0.00783703476190567017))

; Input 5
(assert (>= X_5 -0.15530556440353393555))
(assert (<= X_5 -0.15530556440353393555))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.49076688 -0.59521574 -2.70338249 -2.60388565]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
