; lunarlander property unsafe_3

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.87462585999999997721))
(assert (<= X_0 -0.87462585999999997721))

; Input 1
(assert (>= X_1  0.04551866999999999025))
(assert (<= X_1  0.04551866999999999025))

; Input 2
(assert (>= X_2  1.32071859999999996482))
(assert (<= X_2  1.32071859999999996482))

; Input 3
(assert (>= X_3 -0.38158372000000001512))
(assert (<= X_3 -0.38158372000000001512))

; Input 4
(assert (>= X_4 -0.40887516999999995448))
(assert (<= X_4 -0.40887516999999995448))

; Input 5
(assert (>= X_5  0.00000000540578500019))
(assert (<= X_5  0.00000000540578500019))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.61038202  2.38088679 -1.95372236 -1.1897856 ]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
