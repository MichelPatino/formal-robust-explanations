; lunarlander property safe_38

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.76785550000000002413))
(assert (<= X_0 -0.76785550000000002413))

; Input 1
(assert (>= X_1  0.02501443399999999512))
(assert (<= X_1  0.02501443399999999512))

; Input 2
(assert (>= X_2 -3.29730201867512606739))
(assert (<= X_2 -3.29730201867512606739))

; Input 3
(assert (>= X_3 -0.06063592799999999866))
(assert (<= X_3 -0.06063592799999999866))

; Input 4
(assert (>= X_4 -0.05948638500000000273))
(assert (<= X_4 -0.05948638500000000273))

; Input 5
(assert (>= X_5 -0.07658547000000000271))
(assert (<= X_5 -0.07658547000000000271))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-5.64737988e+00 -9.24385643e+00 -1.30000000e+01  7.87412640e+07]
; action chosen was 3 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_3))
(and (>= Y_1 Y_3))
(and (>= Y_2 Y_3))
))
