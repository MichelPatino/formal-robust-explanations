; lunarlander property unsafe_72

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.79625590000000001645))
(assert (<= X_0 -0.79625590000000001645))

; Input 1
(assert (>= X_1  0.01729467900000000030))
(assert (<= X_1  0.01729467900000000030))

; Input 2
(assert (>= X_2 -0.04915550700000000106))
(assert (<= X_2 -0.04915550700000000106))

; Input 3
(assert (>= X_3  0.04760611000000000703))
(assert (<= X_3  0.04760611000000000703))

; Input 4
(assert (>= X_4 -0.13940250000000001251))
(assert (<= X_4 -0.13940250000000001251))

; Input 5
(assert (>= X_5  0.00221764459999999886))
(assert (<= X_5  0.00221764459999999886))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.55051398 -2.14126945 -3.56575632 -1.72597384]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
