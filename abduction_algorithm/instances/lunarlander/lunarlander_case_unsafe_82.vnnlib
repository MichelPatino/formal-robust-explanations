; lunarlander property unsafe_82

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.62362044999999999284))
(assert (<= X_0 -0.62362044999999999284))

; Input 1
(assert (>= X_1  0.08317610000000000281))
(assert (<= X_1  0.08317610000000000281))

; Input 2
(assert (>= X_2 -0.04193537700000000285))
(assert (<= X_2 -0.04193537700000000285))

; Input 3
(assert (>= X_3  0.02788063900000000220))
(assert (<= X_3  0.02788063900000000220))

; Input 4
(assert (>= X_4  0.09857805999999999513))
(assert (<= X_4  0.09857805999999999513))

; Input 5
(assert (>= X_5  0.15321021000000001333))
(assert (<= X_5  0.15321021000000001333))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.68717456 -2.0114994  -5.11069727 -2.26657343]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
