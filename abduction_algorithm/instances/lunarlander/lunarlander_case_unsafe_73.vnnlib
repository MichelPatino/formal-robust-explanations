; lunarlander property unsafe_73

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.84264183000000003609))
(assert (<= X_0 -0.84264183000000003609))

; Input 1
(assert (>= X_1  0.07782820000000000016))
(assert (<= X_1  0.07782820000000000016))

; Input 2
(assert (>= X_2  0.02434295000000000209))
(assert (<= X_2  0.02434295000000000209))

; Input 3
(assert (>= X_3 -0.03429280600000000900))
(assert (<= X_3 -0.03429280600000000900))

; Input 4
(assert (>= X_4  0.08991701000000001942))
(assert (<= X_4  0.08991701000000001942))

; Input 5
(assert (>= X_5  0.00371119000000000310))
(assert (<= X_5  0.00371119000000000310))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.37700021 -1.65110528 -4.39377213 -2.03391504]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
