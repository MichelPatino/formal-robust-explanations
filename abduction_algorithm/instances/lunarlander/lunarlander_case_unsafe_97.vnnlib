; lunarlander property unsafe_97

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.70596979999999998068))
(assert (<= X_0 -0.70596979999999998068))

; Input 1
(assert (>= X_1  0.11926082000000000349))
(assert (<= X_1  0.11926082000000000349))

; Input 2
(assert (>= X_2  0.01245665600000000171))
(assert (<= X_2  0.01245665600000000171))

; Input 3
(assert (>= X_3 -0.00089813395999999851))
(assert (<= X_3 -0.00089813395999999851))

; Input 4
(assert (>= X_4 -0.10212970500000000118))
(assert (<= X_4 -0.10212970500000000118))

; Input 5
(assert (>= X_5 -0.01407563900000000090))
(assert (<= X_5 -0.01407563900000000090))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.6240052  -1.81113362 -3.31874013 -2.27727318]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
