; lunarlander property safe_8

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88070260000000000211))
(assert (<= X_0 -0.88070260000000000211))

; Input 1
(assert (>= X_1  0.04946895700000000784))
(assert (<= X_1  0.04946895700000000784))

; Input 2
(assert (>= X_2  0.94896345999999998089))
(assert (<= X_2  0.94896345999999998089))

; Input 3
(assert (>= X_3 -0.27417573000000000638))
(assert (<= X_3 -0.27417573000000000638))

; Input 4
(assert (>= X_4 -0.40887517000000001000))
(assert (<= X_4 -0.40887517000000001000))

; Input 5
(assert (>= X_5 -0.00000000613797859761))
(assert (<= X_5 -0.00000000613797859761))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.290593    1.65758979 -2.07563949 -1.22015142]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
