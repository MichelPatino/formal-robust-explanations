; lunarlander property unsafe_70

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.76790389999999997261))
(assert (<= X_0 -0.76790389999999997261))

; Input 1
(assert (>= X_1  0.02509146699999999924))
(assert (<= X_1  0.02509146699999999924))

; Input 2
(assert (>= X_2  0.03161122599999999921))
(assert (<= X_2  0.03161122599999999921))

; Input 3
(assert (>= X_3 -0.06056342599999999660))
(assert (<= X_3 -0.06056342599999999660))

; Input 4
(assert (>= X_4  0.02870291100000000109))
(assert (<= X_4  0.02870291100000000109))

; Input 5
(assert (>= X_5 -0.09501111499999999321))
(assert (<= X_5 -0.09501111499999999321))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.59386814 -0.80353785 -3.32726479 -1.32962501]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
