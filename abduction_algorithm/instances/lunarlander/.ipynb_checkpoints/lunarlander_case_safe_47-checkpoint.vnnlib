; lunarlander property safe_47

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.81507969999999996258))
(assert (<= X_0 -0.81507969999999996258))

; Input 1
(assert (>= X_1  0.02862676200000000004))
(assert (<= X_1  0.02862676200000000004))

; Input 2
(assert (>= X_2  0.11150993400000000499))
(assert (<= X_2  0.11150993400000000499))

; Input 3
(assert (>= X_3 -0.06258537000000000128))
(assert (<= X_3 -0.06258537000000000128))

; Input 4
(assert (>= X_4 -0.15137048000000000170))
(assert (<= X_4 -0.15137048000000000170))

; Input 5
(assert (>= X_5 -0.22873092000000000423))
(assert (<= X_5 -0.22873092000000000423))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.88655597 -0.76320785 -3.16859126 -1.73734164]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
