; lunarlander property safe_9

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.86254730000000001677))
(assert (<= X_0 -0.86254730000000001677))

; Input 1
(assert (>= X_1  0.03766659299999999821))
(assert (<= X_1  0.03766659299999999821))

; Input 2
(assert (>= X_2  0.27780442999999999110))
(assert (<= X_2  0.27780442999999999110))

; Input 3
(assert (>= X_3 -0.05944238999999999773))
(assert (<= X_3 -0.05944238999999999773))

; Input 4
(assert (>= X_4 -0.40887449999999997408))
(assert (<= X_4 -0.40887449999999997408))

; Input 5
(assert (>= X_5  0.10114618400000000009))
(assert (<= X_5  0.10114618400000000009))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.08595102  0.44236749 -2.75246572 -1.04012454]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
