; lunarlander property unsafe_67

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.67765045000000001529))
(assert (<= X_0 -0.67765045000000001529))

; Input 1
(assert (>= X_1  0.05770434000000000674))
(assert (<= X_1  0.05770434000000000674))

; Input 2
(assert (>= X_2 -0.04539305700000000054))
(assert (<= X_2 -0.04539305700000000054))

; Input 3
(assert (>= X_3  0.05228475999999999957))
(assert (<= X_3  0.05228475999999999957))

; Input 4
(assert (>= X_4  0.10256649599999999312))
(assert (<= X_4  0.10256649599999999312))

; Input 5
(assert (>= X_5  0.07715566499999999828))
(assert (<= X_5  0.07715566499999999828))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.28758919 -1.60244977 -4.74761152 -1.91489291]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
