; lunarlander property safe_33

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88606240000000002777))
(assert (<= X_0 -0.88606240000000002777))

; Input 1
(assert (>= X_1  0.05295318000000000247))
(assert (<= X_1  0.05295318000000000247))

; Input 2
(assert (>= X_2  0.70632505000000000983))
(assert (<= X_2  0.70632505000000000983))

; Input 3
(assert (>= X_3 -0.20407232999999999623))
(assert (<= X_3 -0.20407232999999999623))

; Input 4
(assert (>= X_4 -0.40887522999999997841))
(assert (<= X_4 -0.40887522999999997841))

; Input 5
(assert (>= X_5 -0.00000000065718089998))
(assert (<= X_5 -0.00000000065718089998))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.12362286  1.19620216 -2.18573117 -1.21596014]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
