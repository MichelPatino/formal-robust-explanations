; lunarlander property unsafe_91

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.80141640000000002875))
(assert (<= X_0 -0.80141640000000002875))

; Input 1
(assert (>= X_1  0.02253292499999999532))
(assert (<= X_1  0.02253292499999999532))

; Input 2
(assert (>= X_2 -0.03425722999999999963))
(assert (<= X_2 -0.03425722999999999963))

; Input 3
(assert (>= X_3  0.04633229199999999715))
(assert (<= X_3  0.04633229199999999715))

; Input 4
(assert (>= X_4 -0.11385396000000000405))
(assert (<= X_4 -0.11385396000000000405))

; Input 5
(assert (>= X_5 -0.00824411099999999841))
(assert (<= X_5 -0.00824411099999999841))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.56929123 -2.14795446 -3.58045483 -1.75808454]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
