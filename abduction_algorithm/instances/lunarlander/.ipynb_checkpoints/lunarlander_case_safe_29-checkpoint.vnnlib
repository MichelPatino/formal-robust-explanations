; lunarlander property safe_29

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.84266240000000003363))
(assert (<= X_0 -0.84266240000000003363))

; Input 1
(assert (>= X_1  0.07782047999999999743))
(assert (<= X_1  0.07782047999999999743))

; Input 2
(assert (>= X_2  0.02556060300000000118))
(assert (<= X_2  0.02556060300000000118))

; Input 3
(assert (>= X_3 -0.03223315599999999892))
(assert (<= X_3 -0.03223315599999999892))

; Input 4
(assert (>= X_4 -0.00582269069999999909))
(assert (<= X_4 -0.00582269069999999909))

; Input 5
(assert (>= X_5 -0.01410738800000000195))
(assert (<= X_5 -0.01410738800000000195))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.87784004 -1.09699166 -3.85201645 -1.61502874]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
