; lunarlander property unsafe_69

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.75097519999999995388))
(assert (<= X_0 -0.75097519999999995388))

; Input 1
(assert (>= X_1  0.07197319000000000633))
(assert (<= X_1  0.07197319000000000633))

; Input 2
(assert (>= X_2  0.01668122799999999933))
(assert (<= X_2  0.01668122799999999933))

; Input 3
(assert (>= X_3  3.72325053559426288885))
(assert (<= X_3  3.72325053559426288885))

; Input 4
(assert (>= X_4  0.06913756999999999542))
(assert (<= X_4  0.06913756999999999542))

; Input 5
(assert (>= X_5 -0.04348030700000000276))
(assert (<= X_5 -0.04348030700000000276))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 9.26049519  8.60581207 -6.60702848  6.85092306]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
