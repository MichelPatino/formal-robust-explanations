; lunarlander property safe_30

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88016700000000003268))
(assert (<= X_0 -0.88016700000000003268))

; Input 1
(assert (>= X_1  0.04912076999999999416))
(assert (<= X_1  0.04912076999999999416))

; Input 2
(assert (>= X_2  0.67260176000000004848))
(assert (<= X_2  0.67260176000000004848))

; Input 3
(assert (>= X_3 -0.19432895999999999503))
(assert (<= X_3 -0.19432895999999999503))

; Input 4
(assert (>= X_4 -0.40887519999999999420))
(assert (<= X_4 -0.40887519999999999420))

; Input 5
(assert (>= X_5  0.00000000527300100112))
(assert (<= X_5  0.00000000527300100112))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.1027092   1.1330384  -2.2097578  -1.21250331]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
