; lunarlander property safe_48

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.89052796000000000731))
(assert (<= X_0 -0.89052796000000000731))

; Input 1
(assert (>= X_1  0.05585675999999999836))
(assert (<= X_1  0.05585675999999999836))

; Input 2
(assert (>= X_2  0.05518685699999999889))
(assert (<= X_2  0.05518685699999999889))

; Input 3
(assert (>= X_3 -0.01594465999999999939))
(assert (<= X_3 -0.01594465999999999939))

; Input 4
(assert (>= X_4 -0.40887639999999997320))
(assert (<= X_4 -0.40887639999999997320))

; Input 5
(assert (>= X_5 -0.00000000543264899733))
(assert (<= X_5 -0.00000000543264899733))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.46894982 -0.43017584 -3.26822734 -1.46785676]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
