; lunarlander property safe_11

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.68462239999999996432))
(assert (<= X_0 -0.68462239999999996432))

; Input 1
(assert (>= X_1  0.07501259400000000188))
(assert (<= X_1  0.07501259400000000188))

; Input 2
(assert (>= X_2  0.02868063399999999652))
(assert (<= X_2  0.02868063399999999652))

; Input 3
(assert (>= X_3 -0.02947492200000000062))
(assert (<= X_3 -0.02947492200000000062))

; Input 4
(assert (>= X_4 -0.09943159999999999499))
(assert (<= X_4 -0.09943159999999999499))

; Input 5
(assert (>= X_5 -0.05671153199999999506))
(assert (<= X_5 -0.05671153199999999506))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.10129047 -0.2353617  -2.97136664 -0.95198053]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
