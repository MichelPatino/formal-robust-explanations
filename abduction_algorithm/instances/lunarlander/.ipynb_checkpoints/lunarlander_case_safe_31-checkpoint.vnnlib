; lunarlander property safe_31

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.84265584000000004483))
(assert (<= X_0 -0.84265584000000004483))

; Input 1
(assert (>= X_1  0.07769430400000000569))
(assert (<= X_1  0.07769430400000000569))

; Input 2
(assert (>= X_2  0.02727637600000000495))
(assert (<= X_2  0.02727637600000000495))

; Input 3
(assert (>= X_3 -0.03419668599999999697))
(assert (<= X_3 -0.03419668599999999697))

; Input 4
(assert (>= X_4  0.04176193000000000266))
(assert (<= X_4  0.04176193000000000266))

; Input 5
(assert (>= X_5 -0.01164408999999999757))
(assert (<= X_5 -0.01164408999999999757))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.0852896  -1.33139002 -4.06071329 -1.78271139]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
