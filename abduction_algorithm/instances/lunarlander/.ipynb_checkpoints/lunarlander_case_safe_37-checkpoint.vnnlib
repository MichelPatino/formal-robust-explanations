; lunarlander property safe_37

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.86325149999999994943))
(assert (<= X_0 -0.86325149999999994943))

; Input 1
(assert (>= X_1  0.06334692000000000101))
(assert (<= X_1  0.06334692000000000101))

; Input 2
(assert (>= X_2  0.03926616000000000134))
(assert (<= X_2  0.03926616000000000134))

; Input 3
(assert (>= X_3 -0.02817127499999999909))
(assert (<= X_3 -0.02817127499999999909))

; Input 4
(assert (>= X_4 -0.10533699000000000534))
(assert (<= X_4 -0.10533699000000000534))

; Input 5
(assert (>= X_5 -0.15990067999999998949))
(assert (<= X_5 -0.15990067999999998949))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.52585214 -0.67618454 -3.22291112 -1.41413033]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
