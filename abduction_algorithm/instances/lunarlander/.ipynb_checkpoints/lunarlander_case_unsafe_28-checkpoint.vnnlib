; lunarlander property unsafe_28

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88467899999999999316))
(assert (<= X_0 -0.88467899999999999316))

; Input 1
(assert (>= X_1  0.05205388999999999849))
(assert (<= X_1  0.05205388999999999849))

; Input 2
(assert (>= X_2  0.59184660000000000046))
(assert (<= X_2  0.59184660000000000046))

; Input 3
(assert (>= X_3 -0.17099707000000000101))
(assert (<= X_3 -0.17099707000000000101))

; Input 4
(assert (>= X_4 -0.40887499999999998845))
(assert (<= X_4 -0.40887499999999998845))

; Input 5
(assert (>= X_5  0.00000000426304949674))
(assert (<= X_5  0.00000000426304949674))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.05968674  0.98325235 -2.2594142  -1.20200551]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
