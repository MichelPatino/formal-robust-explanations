; lunarlander property unsafe_61

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.90029950000000003030))
(assert (<= X_0 -0.90029950000000003030))

; Input 1
(assert (>= X_1  0.06220837700000000914))
(assert (<= X_1  0.06220837700000000914))

; Input 2
(assert (>= X_2  0.77541599999999999415))
(assert (<= X_2  0.77541599999999999415))

; Input 3
(assert (>= X_3 -0.22403418000000002719))
(assert (<= X_3 -0.22403418000000002719))

; Input 4
(assert (>= X_4 -0.40887501999999997793))
(assert (<= X_4 -0.40887501999999997793))

; Input 5
(assert (>= X_5 -0.00000000042657580246))
(assert (<= X_5 -0.00000000042657580246))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.99543542 -0.06662374 -2.22613645 -2.0627985 ]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
