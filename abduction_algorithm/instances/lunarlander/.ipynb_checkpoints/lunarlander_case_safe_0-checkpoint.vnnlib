; lunarlander property safe_0

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.87614875999999997092))
(assert (<= X_0 -0.87614875999999997092))

; Input 1
(assert (>= X_1  0.04650865499999999597))
(assert (<= X_1  0.04650865499999999597))

; Input 2
(assert (>= X_2  1.38325100000000000833))
(assert (<= X_2  1.38325100000000000833))

; Input 3
(assert (>= X_3 -0.39965063000000000670))
(assert (<= X_3 -0.39965063000000000670))

; Input 4
(assert (>= X_4 -0.40887525999999996262))
(assert (<= X_4 -0.40887525999999996262))

; Input 5
(assert (>= X_5 -0.00000000153337380293))
(assert (<= X_5 -0.00000000153337380293))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.65554076  2.48618698 -1.96236145 -1.1947453 ]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
