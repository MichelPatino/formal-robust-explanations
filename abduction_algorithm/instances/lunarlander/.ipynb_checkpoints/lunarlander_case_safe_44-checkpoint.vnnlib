; lunarlander property safe_44

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.63229310000000005232))
(assert (<= X_0 -0.63229310000000005232))

; Input 1
(assert (>= X_1  0.11921840999999999688))
(assert (<= X_1  0.11921840999999999688))

; Input 2
(assert (>= X_2  0.02463710699999999837))
(assert (<= X_2  0.02463710699999999837))

; Input 3
(assert (>= X_3 -0.00777101049999999807))
(assert (<= X_3 -0.00777101049999999807))

; Input 4
(assert (>= X_4  0.04496245499999999840))
(assert (<= X_4  0.04496245499999999840))

; Input 5
(assert (>= X_5 -0.04106186299999999706))
(assert (<= X_5 -0.04106186299999999706))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.28556404 -0.49608755 -3.27559161 -1.03664923]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
