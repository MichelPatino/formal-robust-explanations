; lunarlander property safe_22

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.80107737000000001082))
(assert (<= X_0 -0.80107737000000001082))

; Input 1
(assert (>= X_1  0.12094653399999999444))
(assert (<= X_1  0.12094653399999999444))

; Input 2
(assert (>= X_2  0.16404425999999999730))
(assert (<= X_2  0.16404425999999999730))

; Input 3
(assert (>= X_3 -0.03657847000000000182))
(assert (<= X_3 -0.03657847000000000182))

; Input 4
(assert (>= X_4 -0.04220496499999999707))
(assert (<= X_4 -0.04220496499999999707))

; Input 5
(assert (>= X_5  0.02717447800000000191))
(assert (<= X_5  0.02717447800000000191))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.42892715 -0.48764113 -3.34884262 -1.31989992]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
