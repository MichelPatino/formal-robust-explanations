; lunarlander property safe_27

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.63230569999999997055))
(assert (<= X_0 -0.63230569999999997055))

; Input 1
(assert (>= X_1  0.11922813000000001549))
(assert (<= X_1  0.11922813000000001549))

; Input 2
(assert (>= X_2  0.02412209499999999618))
(assert (<= X_2  0.02412209499999999618))

; Input 3
(assert (>= X_3 -0.00747825619999999830))
(assert (<= X_3 -0.00747825619999999830))

; Input 4
(assert (>= X_4  0.09426445499999999700))
(assert (<= X_4  0.09426445499999999700))

; Input 5
(assert (>= X_5 -0.03996832000000000162))
(assert (<= X_5 -0.03996832000000000162))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.4414387  -0.68088311 -3.45132089 -1.15883791]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
