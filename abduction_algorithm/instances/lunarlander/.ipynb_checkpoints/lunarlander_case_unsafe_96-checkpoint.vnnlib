; lunarlander property unsafe_96

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72958356000000001984))
(assert (<= X_0 -0.72958356000000001984))

; Input 1
(assert (>= X_1  0.04850035499999999500))
(assert (<= X_1  0.04850035499999999500))

; Input 2
(assert (>= X_2  0.02903371700000000055))
(assert (<= X_2  0.02903371700000000055))

; Input 3
(assert (>= X_3 -0.04731718499999999772))
(assert (<= X_3 -0.04731718499999999772))

; Input 4
(assert (>= X_4  0.08161851999999999996))
(assert (<= X_4  0.08161851999999999996))

; Input 5
(assert (>= X_5 -0.06494721000000000521))
(assert (<= X_5 -0.06494721000000000521))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.73012704 -0.97611457 -3.56573534 -1.41856587]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
