; lunarlander property safe_43

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.70596754999999999924))
(assert (<= X_0 -0.70596754999999999924))

; Input 1
(assert (>= X_1  0.11937332999999999972))
(assert (<= X_1  0.11937332999999999972))

; Input 2
(assert (>= X_2  0.01098722600000000098))
(assert (<= X_2  0.01098722600000000098))

; Input 3
(assert (>= X_3 -0.00166373179999999843))
(assert (<= X_3 -0.00166373179999999843))

; Input 4
(assert (>= X_4  0.09514722999999999931))
(assert (<= X_4  0.09514722999999999931))

; Input 5
(assert (>= X_5 -0.01359621199999999815))
(assert (<= X_5 -0.01359621199999999815))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.79763204 -1.06104004 -3.90046382 -1.49087274]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
