; lunarlander property safe_15

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0  0.00542650222778320521))
(assert (<= X_0  0.00542650222778320521))

; Input 1
(assert (>= X_1  0.20000000000000001110))
(assert (<= X_1  0.20000000000000001110))

; Input 2
(assert (>= X_2  0.54962902069091801316))
(assert (<= X_2  0.54962902069091801316))

; Input 3
(assert (>= X_3 -0.01645375291506449844))
(assert (<= X_3 -0.01645375291506449844))

; Input 4
(assert (>= X_4 -0.00628114910796284676))
(assert (<= X_4 -0.00628114910796284676))

; Input 5
(assert (>= X_5 -0.12449902296066284180))
(assert (<= X_5 -0.12449902296066284180))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.65772307  0.30263865 -0.88639581 -1.73854721]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
