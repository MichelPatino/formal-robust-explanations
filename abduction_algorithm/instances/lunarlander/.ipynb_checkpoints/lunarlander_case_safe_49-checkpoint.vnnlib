; lunarlander property safe_49

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.82649033999999999001))
(assert (<= X_0 -0.82649033999999999001))

; Input 1
(assert (>= X_1  0.08119212000000000651))
(assert (<= X_1  0.08119212000000000651))

; Input 2
(assert (>= X_2  0.22008896000000000015))
(assert (<= X_2  0.22008896000000000015))

; Input 3
(assert (>= X_3 -0.07501252999999999393))
(assert (<= X_3 -0.07501252999999999393))

; Input 4
(assert (>= X_4 -0.02957923199999999697))
(assert (<= X_4 -0.02957923199999999697))

; Input 5
(assert (>= X_5  0.14696774000000001337))
(assert (<= X_5  0.14696774000000001337))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.20458782 -1.26148212 -4.02245951 -2.03193164]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
