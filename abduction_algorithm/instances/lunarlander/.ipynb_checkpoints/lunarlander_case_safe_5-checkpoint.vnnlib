; lunarlander property safe_5

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.87850433999999999468))
(assert (<= X_0 -0.87850433999999999468))

; Input 1
(assert (>= X_1  0.04803987600000000913))
(assert (<= X_1  0.04803987600000000913))

; Input 2
(assert (>= X_2  1.12129699999999998816))
(assert (<= X_2  1.12129699999999998816))

; Input 3
(assert (>= X_3 -0.32396652999999997480))
(assert (<= X_3 -0.32396652999999997480))

; Input 4
(assert (>= X_4 -0.40887496000000000951))
(assert (<= X_4 -0.40887496000000000951))

; Input 5
(assert (>= X_5  0.00000000578917699889))
(assert (<= X_5  0.00000000578917699889))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.43647325  2.00492096 -1.99639785 -1.20560205]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
