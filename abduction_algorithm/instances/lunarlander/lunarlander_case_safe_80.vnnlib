; lunarlander property safe_80

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.68564223999999995840))
(assert (<= X_0 -0.68564223999999995840))

; Input 1
(assert (>= X_1  0.07712818000000000451))
(assert (<= X_1  0.07712818000000000451))

; Input 2
(assert (>= X_2 -0.01939872100000000071))
(assert (<= X_2 -0.01939872100000000071))

; Input 3
(assert (>= X_3  0.00043644129999999975))
(assert (<= X_3  0.00043644129999999975))

; Input 4
(assert (>= X_4  0.04648000399999999838))
(assert (<= X_4  0.04648000399999999838))

; Input 5
(assert (>= X_5  0.00045823585000000222))
(assert (<= X_5  0.00045823585000000222))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.72455984 -0.99187064 -3.82811284 -1.40459144]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
