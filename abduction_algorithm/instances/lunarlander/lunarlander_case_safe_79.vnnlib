; lunarlander property safe_79

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.57155109999999997861))
(assert (<= X_0 -0.57155109999999997861))

; Input 1
(assert (>= X_1  0.15749968999999999775))
(assert (<= X_1  0.15749968999999999775))

; Input 2
(assert (>= X_2 -0.01183974100000000085))
(assert (<= X_2 -0.01183974100000000085))

; Input 3
(assert (>= X_3  0.03045536199999999971))
(assert (<= X_3  0.03045536199999999971))

; Input 4
(assert (>= X_4  0.04953493600000000163))
(assert (<= X_4  0.04953493600000000163))

; Input 5
(assert (>= X_5 -0.00219094700000000038))
(assert (<= X_5 -0.00219094700000000038))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.13079154 -1.70895135 -1.95373785 -1.12775314]
; action chosen was 3 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_3))
(and (>= Y_1 Y_3))
(and (>= Y_2 Y_3))
))
