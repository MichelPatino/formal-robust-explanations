; lunarlander property safe_32

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.78614709999999998757))
(assert (<= X_0 -0.78614709999999998757))

; Input 1
(assert (>= X_1  0.04489647000000000082))
(assert (<= X_1  0.04489647000000000082))

; Input 2
(assert (>= X_2  0.04465013699999999947))
(assert (<= X_2  0.04465013699999999947))

; Input 3
(assert (>= X_3 -0.06416897500000000309))
(assert (<= X_3 -0.06416897500000000309))

; Input 4
(assert (>= X_4 -0.02964763000000000120))
(assert (<= X_4 -0.02964763000000000120))

; Input 5
(assert (>= X_5 -0.10374688999999999439))
(assert (<= X_5 -0.10374688999999999439))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.4585115  -0.62825364 -3.12963724 -1.25737786]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
