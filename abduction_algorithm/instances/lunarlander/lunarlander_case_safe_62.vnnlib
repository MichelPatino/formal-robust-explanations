; lunarlander property safe_62

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.62238530000000003017))
(assert (<= X_0 -0.62238530000000003017))

; Input 1
(assert (>= X_1  0.07998419599999999352))
(assert (<= X_1  0.07998419599999999352))

; Input 2
(assert (>= X_2  0.03314322199999999996))
(assert (<= X_2  0.03314322199999999996))

; Input 3
(assert (>= X_3 -0.02861736299999999983))
(assert (<= X_3 -0.02861736299999999983))

; Input 4
(assert (>= X_4 -0.01091798700000000226))
(assert (<= X_4 -0.01091798700000000226))

; Input 5
(assert (>= X_5  0.05508785300000000607))
(assert (<= X_5  0.05508785300000000607))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.55554426 -0.75051987 -3.51994276 -1.27777064]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
