; lunarlander property unsafe_98

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.76800860000000004124))
(assert (<= X_0 -0.76800860000000004124))

; Input 1
(assert (>= X_1  0.02556489399999999773))
(assert (<= X_1  0.02556489399999999773))

; Input 2
(assert (>= X_2  0.02793733200000000222))
(assert (<= X_2  0.02793733200000000222))

; Input 3
(assert (>= X_3 -0.06003652999999999768))
(assert (<= X_3 -0.06003652999999999768))

; Input 4
(assert (>= X_4  0.07730619599999999370))
(assert (<= X_4  0.07730619599999999370))

; Input 5
(assert (>= X_5 -0.07105648500000000256))
(assert (<= X_5 -0.07105648500000000256))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.86692101 -1.11553049 -3.65394449 -1.54567695]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
