; lunarlander property safe_23

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.88995880000000004983))
(assert (<= X_0 -0.88995880000000004983))

; Input 1
(assert (>= X_1  0.05548625799999999664))
(assert (<= X_1  0.05548625799999999664))

; Input 2
(assert (>= X_2  1.13529560000000007136))
(assert (<= X_2  1.13529560000000007136))

; Input 3
(assert (>= X_3 -0.32801107000000001568))
(assert (<= X_3 -0.32801107000000001568))

; Input 4
(assert (>= X_4 -0.40887531999999998655))
(assert (<= X_4 -0.40887531999999998655))

; Input 5
(assert (>= X_5 -0.00000000334770969973))
(assert (<= X_5 -0.00000000334770969973))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[ 0.00639971  1.38637388 -1.47636259 -1.4365797 ]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
