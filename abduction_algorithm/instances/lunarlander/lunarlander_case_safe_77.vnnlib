; lunarlander property safe_77

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.68467723999999996476))
(assert (<= X_0 -0.68467723999999996476))

; Input 1
(assert (>= X_1  0.07479001000000000399))
(assert (<= X_1  0.07479001000000000399))

; Input 2
(assert (>= X_2  0.02878205999999999820))
(assert (<= X_2  0.02878205999999999820))

; Input 3
(assert (>= X_3 -0.02983921999999999963))
(assert (<= X_3 -0.02983921999999999963))

; Input 4
(assert (>= X_4 -0.00622225829999999928))
(assert (<= X_4 -0.00622225829999999928))

; Input 5
(assert (>= X_5 -0.05241263699999999803))
(assert (<= X_5 -0.05241263699999999803))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-1.72283292 -1.92724776 -3.2925086  -2.33838177]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
