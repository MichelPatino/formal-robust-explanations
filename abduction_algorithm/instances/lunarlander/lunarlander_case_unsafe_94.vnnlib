; lunarlander property unsafe_94

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.82134920000000000151))
(assert (<= X_0 -0.82134920000000000151))

; Input 1
(assert (>= X_1  0.01729682499999999484))
(assert (<= X_1  0.01729682499999999484))

; Input 2
(assert (>= X_2  0.02238392300000000001))
(assert (<= X_2  0.02238392300000000001))

; Input 3
(assert (>= X_3  0.05986316500000000290))
(assert (<= X_3  0.05986316500000000290))

; Input 4
(assert (>= X_4 -0.33831778000000001239))
(assert (<= X_4 -0.33831778000000001239))

; Input 5
(assert (>= X_5  0.00731123000000000189))
(assert (<= X_5  0.00731123000000000189))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.62519944 -1.96197701 -3.46655536 -2.04801607]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
