; lunarlander property safe_12

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.00451021194458008090))
(assert (<= X_0 -0.00451021194458008090))

; Input 1
(assert (>= X_1  0.20000000000000001110))
(assert (<= X_1  0.20000000000000001110))

; Input 2
(assert (>= X_2 -0.45685558319091801316))
(assert (<= X_2 -0.45685558319091801316))

; Input 3
(assert (>= X_3 -0.02964135408401490090))
(assert (<= X_3 -0.02964135408401490090))

; Input 4
(assert (>= X_4  0.00523304101079702377))
(assert (<= X_4  0.00523304101079702377))

; Input 5
(assert (>= X_5  0.10348460674285889227))
(assert (<= X_5  0.10348460674285889227))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.87699473 -1.99577773 -1.55881643 -0.20279215]
; action chosen was 3 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_3))
(and (>= Y_1 Y_3))
(and (>= Y_2 Y_3))
))
