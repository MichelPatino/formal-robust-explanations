; lunarlander property unsafe_16

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0  0.00694952011108398993))
(assert (<= X_0  0.00694952011108398993))

; Input 1
(assert (>= X_1  0.20000000000000001110))
(assert (<= X_1  0.20000000000000001110))

; Input 2
(assert (>= X_2  0.70389308929443361595))
(assert (<= X_2  0.70389308929443361595))

; Input 3
(assert (>= X_3  0.40562845865885421848))
(assert (<= X_3  0.40562845865885421848))

; Input 4
(assert (>= X_4 -0.00804593879729509354))
(assert (<= X_4 -0.00804593879729509354))

; Input 5
(assert (>= X_5 -0.15944222211837766334))
(assert (<= X_5 -0.15944222211837766334))

; Input 6
(assert (>= X_6  0.00000000000000000000))
(assert (<= X_6  0.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-1.23080945 -0.6539498  -3.71631742 -2.38850689]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
