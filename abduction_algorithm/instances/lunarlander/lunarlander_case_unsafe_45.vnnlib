; lunarlander property unsafe_45

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.89423244999999995652))
(assert (<= X_0 -0.89423244999999995652))

; Input 1
(assert (>= X_1  0.05826245199999999930))
(assert (<= X_1  0.05826245199999999930))

; Input 2
(assert (>= X_2  0.96816789999999997018))
(assert (<= X_2  0.96816789999999997018))

; Input 3
(assert (>= X_3 -0.27820080000000002585))
(assert (<= X_3 -0.27820080000000002585))

; Input 4
(assert (>= X_4 -0.40886959999999999971))
(assert (<= X_4 -0.40886959999999999971))

; Input 5
(assert (>= X_5 -0.00739997700000000203))
(assert (<= X_5 -0.00739997700000000203))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  0.00000000000000000000))
(assert (<= X_7  0.00000000000000000000))

; model prediction:[-0.51059151  0.65589625 -1.89158857 -1.76497698]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
