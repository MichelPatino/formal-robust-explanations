; lunarlander property unsafe_84

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.72172590000000003130))
(assert (<= X_0 -0.72172590000000003130))

; Input 1
(assert (>= X_1  0.02920461599999999922))
(assert (<= X_1  0.02920461599999999922))

; Input 2
(assert (>= X_2  0.03303194000000000269))
(assert (<= X_2  0.03303194000000000269))

; Input 3
(assert (>= X_3 -0.05632940699999999801))
(assert (<= X_3 -0.05632940699999999801))

; Input 4
(assert (>= X_4  0.08151155000000000206))
(assert (<= X_4  0.08151155000000000206))

; Input 5
(assert (>= X_5 -0.04988319399999999876))
(assert (<= X_5 -0.04988319399999999876))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[-0.8311854  -1.0744952  -3.63962841 -1.5078969 ]
; action chosen was 0 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_1 Y_0))
(and (>= Y_2 Y_0))
(and (>= Y_3 Y_0))
))
