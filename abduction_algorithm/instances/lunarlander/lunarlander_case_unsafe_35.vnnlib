; lunarlander property unsafe_35

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)

; Input 0
(assert (>= X_0 -0.87740689999999998960))
(assert (<= X_0 -0.87740689999999998960))

; Input 1
(assert (>= X_1  0.04732683699999999660))
(assert (<= X_1  0.04732683699999999660))

; Input 2
(assert (>= X_2  0.56321010000000004680))
(assert (<= X_2  0.56321010000000004680))

; Input 3
(assert (>= X_3 -0.16272338000000000080))
(assert (<= X_3 -0.16272338000000000080))

; Input 4
(assert (>= X_4 -0.40887572999999999279))
(assert (<= X_4 -0.40887572999999999279))

; Input 5
(assert (>= X_5 -0.00000000193115080177))
(assert (<= X_5 -0.00000000193115080177))

; Input 6
(assert (>= X_6  1.00000000000000000000))
(assert (<= X_6  1.00000000000000000000))

; Input 7
(assert (>= X_7  1.00000000000000000000))
(assert (<= X_7  1.00000000000000000000))

; model prediction:[ 0.05062749  0.93380517 -2.292135   -1.18884313]
; action chosen was 1 (argmax)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_1))
(and (>= Y_2 Y_1))
(and (>= Y_3 Y_1))
))
