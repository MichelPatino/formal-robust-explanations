; dubinsrejoin property unsafe_66

(declare-const X_0 Real)
(declare-const X_1 Real)
(declare-const X_2 Real)
(declare-const X_3 Real)
(declare-const X_4 Real)
(declare-const X_5 Real)
(declare-const X_6 Real)
(declare-const X_7 Real)

(declare-const Y_0 Real)
(declare-const Y_1 Real)
(declare-const Y_2 Real)
(declare-const Y_3 Real)
(declare-const Y_4 Real)
(declare-const Y_5 Real)
(declare-const Y_6 Real)
(declare-const Y_7 Real)

; Input 0
(assert (>= X_0  0.33713917132662318821))
(assert (<= X_0  0.33713917132662318821))

; Input 1
(assert (>= X_1 -0.47839300956915165042))
(assert (<= X_1 -0.47839300956915165042))

; Input 2
(assert (>= X_2  0.81686491992480714242))
(assert (<= X_2  0.81686491992480714242))

; Input 3
(assert (>= X_3 -0.61932989662116721963))
(assert (<= X_3 -0.61932989662116721963))

; Input 4
(assert (>= X_4  0.50000000000000000000))
(assert (<= X_4  0.50000000000000000000))

; Input 5
(assert (>= X_5  0.00000000000000001388))
(assert (<= X_5  0.00000000000000001388))

; Input 6
(assert (>= X_6 -0.11780794978174799481))
(assert (<= X_6 -0.11780794978174799481))

; Input 7
(assert (>= X_7  0.48592312866154163675))
(assert (<= X_7  0.48592312866154163675))

; model prediction:[-2.22634983 -1.35731256  0.20017903  1.66366088][-10.30037785   1.47602332   1.16797078   1.85681748]
; action chosen was 3 (first actuator) 7 (second actuator)
; output constraints for counterexample
(assert (or
(and (>= Y_0 Y_3))
(and (>= Y_1 Y_3))
(and (>= Y_2 Y_3))
(and (>= Y_4 Y_7))
(and (>= Y_5 Y_7))
(and (>= Y_6 Y_7))
))
